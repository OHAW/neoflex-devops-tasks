apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-conf
  namespace: hp-namespace
  labels:
    project: monitoring
data:
  prometheus.yml: |-
    scrape_configs:
    - job_name: 'monitoring'
      scrape_interval: 5s
      metrics_path: '/actuator/prometheus'
      static_configs:
        - targets: ['10.102.211.178:8080']
# in targets ['cluster_ip_of_app_service:targetPort'] OR ['INTERNAL-IP:NodePort']
# kubernetes env cluster ip service? Service.spec.clisterIP[0] ???
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment
  namespace: hp-namespace
  labels:
    project: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      project: monitoring
  template:
    metadata:
      labels:
        project: monitoring
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus
          imagePullPolicy: Always
          args:
            - "--storage.tsdb.retention.time=12h"
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus/"
          ports:
            - containerPort: 9090
          resources:
            requests:
              cpu: 500m
              memory: 500M
            limits:
              cpu: 1
              memory: 1Gi
          volumeMounts:
            - name: prometheus-configs
              mountPath: /etc/prometheus/
            - name: prometheus-storage-volume
              mountPath: /prometheus/
      volumes:
        - name: prometheus-conf
          configMap:
            defaultMode: 420
            name: prometheus-conf
  
        - name: prometheus-storage-volume
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: hp-namespace
  annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/port:   '9090'
spec:
  selector: 
    project: monitoring
  type: NodePort  
  ports:
    - port: 8080
      targetPort: 9090 
      nodePort: 31000